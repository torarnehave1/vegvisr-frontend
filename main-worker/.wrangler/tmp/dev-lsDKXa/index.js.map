{
  "version": 3,
  "sources": ["../../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../../node_modules/uuid/dist/esm-browser/native.js", "../../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../../node_modules/jose/dist/webapi/lib/buffer_utils.js", "../../../../node_modules/jose/dist/webapi/lib/base64.js", "../../../../node_modules/jose/dist/webapi/util/base64url.js", "../../../../node_modules/jose/dist/webapi/util/errors.js", "../../../../node_modules/jose/dist/webapi/lib/crypto_key.js", "../../../../node_modules/jose/dist/webapi/lib/invalid_key_input.js", "../../../../node_modules/jose/dist/webapi/lib/is_key_like.js", "../../../../node_modules/jose/dist/webapi/lib/is_disjoint.js", "../../../../node_modules/jose/dist/webapi/lib/is_object.js", "../../../../node_modules/jose/dist/webapi/lib/check_key_length.js", "../../../../node_modules/jose/dist/webapi/lib/jwk_to_key.js", "../../../../node_modules/jose/dist/webapi/lib/validate_crit.js", "../../../../node_modules/jose/dist/webapi/lib/is_jwk.js", "../../../../node_modules/jose/dist/webapi/lib/normalize_key.js", "../../../../node_modules/jose/dist/webapi/lib/check_key_type.js", "../../../../node_modules/jose/dist/webapi/lib/subtle_dsa.js", "../../../../node_modules/jose/dist/webapi/lib/get_sign_verify_key.js", "../../../../node_modules/jose/dist/webapi/lib/epoch.js", "../../../../node_modules/jose/dist/webapi/lib/secs.js", "../../../../node_modules/jose/dist/webapi/lib/jwt_claims_set.js", "../../../../node_modules/jose/dist/webapi/lib/sign.js", "../../../../node_modules/jose/dist/webapi/jws/flattened/sign.js", "../../../../node_modules/jose/dist/webapi/jws/compact/sign.js", "../../../../node_modules/jose/dist/webapi/jwt/sign.js", "../../../index.js", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../bundle-0TX7fQ/middleware-insertion-facade.js", "../../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-0TX7fQ/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\torar\\MyApps\\vegvisr-frontend\\main-worker\\.wrangler\\tmp\\dev-lsDKXa",
  "sourcesContent": ["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "export const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\n", "export function encodeBase64(input) {\n    if (Uint8Array.prototype.toBase64) {\n        return input.toBase64();\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < input.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n}\nexport function decodeBase64(encoded) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(encoded);\n    }\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nimport { encodeBase64, decodeBase64 } from '../lib/base64.js';\nexport function decode(input) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(typeof input === 'string' ? input : decoder.decode(input), {\n            alphabet: 'base64url',\n        });\n    }\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n}\nexport function encode(input) {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    if (Uint8Array.prototype.toBase64) {\n        return unencoded.toBase64({ alphabet: 'base64url', omitPadding: true });\n    }\n    return encodeBase64(unencoded).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n", "export class JOSEError extends Error {\n    static code = 'ERR_JOSE_GENERIC';\n    code = 'ERR_JOSE_GENERIC';\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static code = 'ERR_JWT_EXPIRED';\n    code = 'ERR_JWT_EXPIRED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    static code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n}\nexport class JOSENotSupported extends JOSEError {\n    static code = 'ERR_JOSE_NOT_SUPPORTED';\n    code = 'ERR_JOSE_NOT_SUPPORTED';\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    static code = 'ERR_JWE_DECRYPTION_FAILED';\n    code = 'ERR_JWE_DECRYPTION_FAILED';\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    static code = 'ERR_JWE_INVALID';\n    code = 'ERR_JWE_INVALID';\n}\nexport class JWSInvalid extends JOSEError {\n    static code = 'ERR_JWS_INVALID';\n    code = 'ERR_JWS_INVALID';\n}\nexport class JWTInvalid extends JOSEError {\n    static code = 'ERR_JWT_INVALID';\n    code = 'ERR_JWT_INVALID';\n}\nexport class JWKInvalid extends JOSEError {\n    static code = 'ERR_JWK_INVALID';\n    code = 'ERR_JWK_INVALID';\n}\nexport class JWKSInvalid extends JOSEError {\n    static code = 'ERR_JWKS_INVALID';\n    code = 'ERR_JWKS_INVALID';\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    static code = 'ERR_JWKS_NO_MATCHING_KEY';\n    code = 'ERR_JWKS_NO_MATCHING_KEY';\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    [Symbol.asyncIterator];\n    static code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSTimeout extends JOSEError {\n    static code = 'ERR_JWKS_TIMEOUT';\n    code = 'ERR_JWKS_TIMEOUT';\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    static code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n    }\n}\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usage) {\n    if (usage && !key.usages.includes(usage)) {\n        throw new TypeError(`CryptoKey does not support this operation, its usages must include ${usage}.`);\n    }\n}\nexport function checkSigCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'Ed25519':\n        case 'EdDSA': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\nexport function checkEncCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                    break;\n                default:\n                    throw unusable('ECDH or X25519');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\n", "function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "export function assertCryptoKey(key) {\n    if (!isCryptoKey(key)) {\n        throw new Error('CryptoKey instance expected');\n    }\n}\nexport function isCryptoKey(key) {\n    return key?.[Symbol.toStringTag] === 'CryptoKey';\n}\nexport function isKeyObject(key) {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n}\nexport default (key) => {\n    return isCryptoKey(key) || isKeyObject(key);\n};\n", "export default (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default (input) => {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n};\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                case 'EdDSA':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nexport default async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, algorithm, jwk.ext ?? (jwk.d ? false : true), jwk.key_ops ?? keyUsages);\n};\n", "import { JOSENotSupported, JWEInvalid, JWSInvalid } from '../util/errors.js';\nexport default (Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) => {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n};\n", "import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return key.kty === 'oct' && typeof key.k === 'string';\n}\n", "import { isJWK } from './is_jwk.js';\nimport { decode } from '../util/base64url.js';\nimport importJWK from './jwk_to_key.js';\nimport { isCryptoKey, isKeyObject } from './is_key_like.js';\nlet cache;\nconst handleJWK = async (key, jwk, alg, freeze = false) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst handleKeyObject = (keyObject, alg) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(keyObject);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const isPublic = keyObject.type === 'public';\n    const extractable = isPublic ? true : false;\n    let cryptoKey;\n    if (keyObject.asymmetricKeyType === 'x25519') {\n        switch (alg) {\n            case 'ECDH-ES':\n            case 'ECDH-ES+A128KW':\n            case 'ECDH-ES+A192KW':\n            case 'ECDH-ES+A256KW':\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, isPublic ? [] : ['deriveBits']);\n    }\n    if (keyObject.asymmetricKeyType === 'ed25519') {\n        if (alg !== 'EdDSA' && alg !== 'Ed25519') {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, [\n            isPublic ? 'verify' : 'sign',\n        ]);\n    }\n    if (keyObject.asymmetricKeyType === 'rsa') {\n        let hash;\n        switch (alg) {\n            case 'RSA-OAEP':\n                hash = 'SHA-1';\n                break;\n            case 'RS256':\n            case 'PS256':\n            case 'RSA-OAEP-256':\n                hash = 'SHA-256';\n                break;\n            case 'RS384':\n            case 'PS384':\n            case 'RSA-OAEP-384':\n                hash = 'SHA-384';\n                break;\n            case 'RS512':\n            case 'PS512':\n            case 'RSA-OAEP-512':\n                hash = 'SHA-512';\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg.startsWith('RSA-OAEP')) {\n            return keyObject.toCryptoKey({\n                name: 'RSA-OAEP',\n                hash,\n            }, extractable, isPublic ? ['encrypt'] : ['decrypt']);\n        }\n        cryptoKey = keyObject.toCryptoKey({\n            name: alg.startsWith('PS') ? 'RSA-PSS' : 'RSASSA-PKCS1-v1_5',\n            hash,\n        }, extractable, [isPublic ? 'verify' : 'sign']);\n    }\n    if (keyObject.asymmetricKeyType === 'ec') {\n        const nist = new Map([\n            ['prime256v1', 'P-256'],\n            ['secp384r1', 'P-384'],\n            ['secp521r1', 'P-521'],\n        ]);\n        const namedCurve = nist.get(keyObject.asymmetricKeyDetails?.namedCurve);\n        if (!namedCurve) {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg === 'ES256' && namedCurve === 'P-256') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES384' && namedCurve === 'P-384') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES512' && namedCurve === 'P-521') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg.startsWith('ECDH-ES')) {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDH',\n                namedCurve,\n            }, extractable, isPublic ? [] : ['deriveBits']);\n        }\n    }\n    if (!cryptoKey) {\n        throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n    }\n    if (!cached) {\n        cache.set(keyObject, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nexport default async (key, alg) => {\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        return key;\n    }\n    if (isKeyObject(key)) {\n        if (key.type === 'secret') {\n            return key.export();\n        }\n        if ('toCryptoKey' in key && typeof key.toCryptoKey === 'function') {\n            try {\n                return handleKeyObject(key, alg);\n            }\n            catch (err) {\n                if (err instanceof TypeError) {\n                    throw err;\n                }\n            }\n        }\n        let jwk = key.export({ format: 'jwk' });\n        return handleJWK(key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k) {\n            return decode(key.k);\n        }\n        return handleJWK(key, key, alg, true);\n    }\n    throw new Error('unreachable');\n};\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike from './is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined) {\n        let expected;\n        switch (usage) {\n            case 'sign':\n            case 'verify':\n                expected = 'sig';\n                break;\n            case 'encrypt':\n            case 'decrypt':\n                expected = 'enc';\n                break;\n        }\n        if (key.use !== expected) {\n            throw new TypeError(`Invalid key for this operation, its \"use\" must be \"${expected}\" when present`);\n        }\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, its \"alg\" must be \"${alg}\" when present`);\n    }\n    if (Array.isArray(key.key_ops)) {\n        let expectedKeyOp;\n        switch (true) {\n            case usage === 'sign' || usage === 'verify':\n            case alg === 'dir':\n            case alg.includes('CBC-HS'):\n                expectedKeyOp = usage;\n                break;\n            case alg.startsWith('PBES2'):\n                expectedKeyOp = 'deriveBits';\n                break;\n            case /^A\\d{3}(?:GCM)?(?:KW)?$/.test(alg):\n                if (!alg.includes('GCM') && alg.endsWith('KW')) {\n                    expectedKeyOp = usage === 'encrypt' ? 'wrapKey' : 'unwrapKey';\n                }\n                else {\n                    expectedKeyOp = usage;\n                }\n                break;\n            case usage === 'encrypt' && alg.startsWith('RSA'):\n                expectedKeyOp = 'wrapKey';\n                break;\n            case usage === 'decrypt':\n                expectedKeyOp = alg.startsWith('RSA') ? 'unwrapKey' : 'deriveBits';\n                break;\n        }\n        if (expectedKeyOp && key.key_ops?.includes?.(expectedKeyOp) === false) {\n            throw new TypeError(`Invalid key for this operation, its \"key_ops\" must include \"${expectedKeyOp}\" when present`);\n        }\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key', 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (jwk.isJWK(key)) {\n        switch (usage) {\n            case 'decrypt':\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'encrypt':\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (key.type === 'public') {\n        switch (usage) {\n            case 'sign':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n            case 'decrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n            default:\n                break;\n        }\n    }\n    if (key.type === 'private') {\n        switch (usage) {\n            case 'verify':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n            case 'encrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n            default:\n                break;\n        }\n    }\n};\nexport default (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A(?:128|192|256)(?:GCM)?(?:KW)?$/.test(alg) ||\n        /^A(?:128|192|256)CBC-HS(?:256|384|512)$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default (alg, algorithm) => {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: parseInt(alg.slice(-3), 10) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n        case 'EdDSA':\n            return { name: 'Ed25519' };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n};\n", "import { checkSigCryptoKey } from './crypto_key.js';\nimport invalidKeyInput from './invalid_key_input.js';\nexport default async (alg, key, usage) => {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    checkSigCryptoKey(key, alg, usage);\n    return key;\n};\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nimport { encoder } from './buffer_utils.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport function validateClaimsSet(protectedHeader, encodedPayload, options = {}) {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n}\nexport class JWTClaimsBuilder {\n    #payload;\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this.#payload = structuredClone(payload);\n    }\n    data() {\n        return encoder.encode(JSON.stringify(this.#payload));\n    }\n    get iss() {\n        return this.#payload.iss;\n    }\n    set iss(value) {\n        this.#payload.iss = value;\n    }\n    get sub() {\n        return this.#payload.sub;\n    }\n    set sub(value) {\n        this.#payload.sub = value;\n    }\n    get aud() {\n        return this.#payload.aud;\n    }\n    set aud(value) {\n        this.#payload.aud = value;\n    }\n    set jti(value) {\n        this.#payload.jti = value;\n    }\n    set nbf(value) {\n        if (typeof value === 'number') {\n            this.#payload.nbf = validateInput('setNotBefore', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.nbf = validateInput('setNotBefore', epoch(value));\n        }\n        else {\n            this.#payload.nbf = epoch(new Date()) + secs(value);\n        }\n    }\n    set exp(value) {\n        if (typeof value === 'number') {\n            this.#payload.exp = validateInput('setExpirationTime', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.exp = validateInput('setExpirationTime', epoch(value));\n        }\n        else {\n            this.#payload.exp = epoch(new Date()) + secs(value);\n        }\n    }\n    set iat(value) {\n        if (typeof value === 'undefined') {\n            this.#payload.iat = epoch(new Date());\n        }\n        else if (value instanceof Date) {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(value));\n        }\n        else if (typeof value === 'string') {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(new Date()) + secs(value));\n        }\n        else {\n            this.#payload.iat = validateInput('setIssuedAt', value);\n        }\n    }\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nexport default async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\n", "import { encode as b64u } from '../../util/base64url.js';\nimport sign from '../../lib/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport normalizeKey from '../../lib/normalize_key.js';\nexport class FlattenedSign {\n    #payload;\n    #protectedHeader;\n    #unprotectedHeader;\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this.#payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.#protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.#protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.#unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.#unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this.#protectedHeader && !this.#unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this.#protectedHeader, this.#unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this.#protectedHeader,\n            ...this.#unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this.#protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this.#protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this.#payload;\n        if (b64) {\n            payload = encoder.encode(b64u(payload));\n        }\n        let protectedHeader;\n        if (this.#protectedHeader) {\n            protectedHeader = encoder.encode(b64u(JSON.stringify(this.#protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const k = await normalizeKey(key, alg);\n        const signature = await sign(alg, k, data);\n        const jws = {\n            signature: b64u(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this.#unprotectedHeader) {\n            jws.header = this.#unprotectedHeader;\n        }\n        if (this.#protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    #flattened;\n    constructor(payload) {\n        this.#flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this.#flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this.#flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { JWTClaimsBuilder } from '../lib/jwt_claims_set.js';\nexport class SignJWT {\n    #protectedHeader;\n    #jwt;\n    constructor(payload = {}) {\n        this.#jwt = new JWTClaimsBuilder(payload);\n    }\n    setIssuer(issuer) {\n        this.#jwt.iss = issuer;\n        return this;\n    }\n    setSubject(subject) {\n        this.#jwt.sub = subject;\n        return this;\n    }\n    setAudience(audience) {\n        this.#jwt.aud = audience;\n        return this;\n    }\n    setJti(jwtId) {\n        this.#jwt.jti = jwtId;\n        return this;\n    }\n    setNotBefore(input) {\n        this.#jwt.nbf = input;\n        return this;\n    }\n    setExpirationTime(input) {\n        this.#jwt.exp = input;\n        return this;\n    }\n    setIssuedAt(input) {\n        this.#jwt.iat = input;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this.#protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(this.#jwt.data());\n        sig.setProtectedHeader(this.#protectedHeader);\n        if (Array.isArray(this.#protectedHeader?.crit) &&\n            this.#protectedHeader.crit.includes('b64') &&\n            this.#protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n", "import { v4 as uuidv4 } from 'uuid' // Import UUID library\nimport { SignJWT } from 'jose' // Import jose for JWT handling\n\n// Middleware to add CORS headers\nfunction addCorsHeaders(response) {\n  response.headers.set('Access-Control-Allow-Origin', '*')\n  response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS')\n  response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization')\n  return response\n}\n\n// Cloudflare Worker fetch handler\nexport default {\n  async fetch(request, env) {\n    const url = new URL(request.url)\n    const path = url.pathname\n    const method = request.method // Added declaration for request method\n\n    // Handle CORS preflight requests\n    if (method === 'OPTIONS') {\n      return addCorsHeaders(new Response(null, { status: 204 }))\n    }\n\n    try {\n      if (path === '/sve2' && method === 'GET') {\n        console.log('Received GET /sve2 request')\n\n        const userEmail = url.searchParams.get('email')\n        const apiToken = env.API_TOKEN // Retrieve the token from the environment variable\n\n        if (!apiToken) {\n          console.error('Error in GET /sve2: Missing API token')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing API token' }), { status: 500 }),\n          )\n        }\n\n        if (!userEmail) {\n          console.error('Error in GET /sve2: Missing email parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n\n        const db = env.vegvisr_org // Access the D1 database binding\n\n        // Check if the user already exists in the database by checking if the email is already present\n        try {\n          const query = `\n            SELECT user_id\n            FROM config\n            WHERE email = ?;\n          `\n          const existingUser = await db.prepare(query).bind(userEmail).first()\n          if (existingUser) {\n            console.log(`User with email ${userEmail} already exists in the database`)\n            return addCorsHeaders(\n              new Response(JSON.stringify({ message: 'User with this email already exists.' }), {\n                status: 200,\n              }),\n            )\n          }\n        } catch (dbError) {\n          console.error('Error checking for existing user in database:', dbError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to check database for existing user.' }), {\n              status: 500,\n            }),\n          )\n        }\n\n        // Call the external API to register the user\n        const apiUrl = `https://slowyou.io/api/reg-user-vegvisr?email=${encodeURIComponent(userEmail)}`\n        console.log('API URL:', apiUrl)\n        console.log('Authorization Header:', `Bearer ${apiToken}`)\n\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiToken}`,\n          },\n        })\n\n        console.log('Response status:', response.status)\n        const rawBody = await response.text()\n        console.log('Raw response body:', rawBody)\n\n        if (!response.ok) {\n          console.error(`Error from external API: ${response.status} ${response.statusText}`)\n          return addCorsHeaders(\n            new Response(\n              JSON.stringify({\n                error: `Failed to register user. External API returned status ${response.status}.`,\n              }),\n              { status: 500 },\n            ),\n          )\n        }\n\n        let responseBody\n        try {\n          responseBody = JSON.parse(rawBody)\n        } catch (parseError) {\n          console.error('Error parsing response body:', parseError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to parse response from external API.' }), {\n              status: 500,\n            }),\n          )\n        }\n\n        // Insert the new user into the database\n        try {\n          const userId = uuidv4() // Generate a unique user ID\n          const data = {\n            email: responseBody.email,\n            emailVerificationToken: responseBody.emailVerificationToken,\n            emailVerified: true,\n            role: 'ViewOnly',\n          }\n          const insertQuery = `\n            INSERT INTO config (user_id, email, emailVerificationToken, data, role)\n            VALUES (?, ?, ?, ?, ?)\n            ON CONFLICT(email) DO NOTHING;\n          `\n          console.log(\n            'Executing query:',\n            insertQuery,\n            'with parameters:',\n            userId,\n            data.email,\n            data.emailVerificationToken,\n            JSON.stringify({}),\n            data.role,\n          )\n          const { changes } = await db\n            .prepare(insertQuery)\n            .bind(userId, data.email, data.emailVerificationToken, JSON.stringify({}), data.role)\n            .run()\n          if (changes === 0) {\n            console.log('No changes made to the database - user might already exist')\n          } else {\n            console.log(\n              `Inserted record into database: user_id=${userId}, email=${data.email}, emailVerificationToken=${data.emailVerificationToken}, data=${JSON.stringify({})}, role=${data.role}`,\n            )\n          }\n        } catch (dbError) {\n          console.error('Error inserting record into database:', dbError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to insert record into database.' }), {\n              status: 500,\n            }),\n          )\n        }\n\n        return addCorsHeaders(\n          new Response(JSON.stringify({ status: response.status, body: responseBody }), {\n            status: 200,\n          }),\n        )\n      }\n\n      if (path === '/resend-verification' && method === 'POST') {\n        console.log('Received POST /resend-verification request')\n\n        const requestBody = await request.json()\n        const userEmail = requestBody.email\n        const apiToken = env.API_TOKEN // Retrieve the token from the environment variable\n\n        if (!apiToken) {\n          console.error('Error in POST /resend-verification: Missing API token')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing API token' }), { status: 500 }),\n          )\n        }\n\n        if (!userEmail) {\n          console.error('Error in POST /resend-verification: Missing email parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n\n        // Call the external API to resend the verification email\n        const apiUrl = `https://slowyou.io/api/resend-verification-email?email=${encodeURIComponent(\n          userEmail,\n        )}`\n        console.log('API URL:', apiUrl)\n        console.log('Authorization Header:', `Bearer ${apiToken}`)\n\n        try {\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${apiToken}`,\n            },\n          })\n\n          console.log('Response status:', response.status)\n          const rawBody = await response.text()\n          console.log('Raw response body:', rawBody)\n\n          if (!response.ok) {\n            console.error(`Error from external API: ${response.status} ${response.statusText}`)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({\n                  error: `Failed to resend verification email. External API returned status ${response.status}.`,\n                }),\n                { status: 500 },\n              ),\n            )\n          }\n\n          return addCorsHeaders(\n            new Response(JSON.stringify({ message: 'Verification email resent successfully.' }), {\n              status: 200,\n            }),\n          )\n        } catch (error) {\n          console.error('Error calling external API:', error)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to resend verification email.' }), {\n              status: 500,\n            }),\n          )\n        }\n      }\n\n      if (path === '/verify-email' && method === 'GET') {\n        console.log('Received GET /verify-email request')\n\n        const emailToken = url.searchParams.get('token')\n        if (!emailToken) {\n          console.error('Error in GET /verify-email: Missing token parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing token parameter' }), { status: 400 }),\n          )\n        }\n\n        try {\n          console.log('Sending request to external verification API with token:', emailToken)\n          const verifyResponse = await fetch(\n            `https://slowyou.io/api/verify-email?token=${emailToken}`,\n            {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            },\n          )\n\n          console.log('External API response status:', verifyResponse.status)\n          if (!verifyResponse.ok) {\n            console.error(\n              `Error from external API: ${verifyResponse.status} ${verifyResponse.statusText}`,\n            )\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({\n                  error: `Failed to verify email. External API returned status ${verifyResponse.status}.`,\n                }),\n                { status: 500 },\n              ),\n            )\n          }\n\n          const rawBody = await verifyResponse.text()\n          console.log('Response body from external API:', rawBody)\n\n          let parsedBody\n          try {\n            parsedBody = JSON.parse(rawBody)\n          } catch (parseError) {\n            console.error('Error parsing response body:', parseError)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({ error: 'Failed to parse response from external API.' }),\n                { status: 500 },\n              ),\n            )\n          }\n\n          if (\n            parsedBody.message === 'Email verified successfully.' &&\n            parsedBody.emailVerificationToken\n          ) {\n            const db = env.vegvisr_org // Access the D1 database binding\n            try {\n              const existingUserQuery = `\n                SELECT emailVerificationToken\n                FROM config\n                WHERE email = ?;\n              `\n              console.log('Checking if user exists in the database with query:', existingUserQuery)\n              const existingUser = await db\n                .prepare(existingUserQuery)\n                .bind(parsedBody.email)\n                .first()\n\n              if (existingUser) {\n                console.log(`User with email=${parsedBody.email} already exists in the database`)\n\n                // Update the emailVerificationToken and set role to ViewOnly\n                const updateQuery = `\n                  UPDATE config\n                  SET emailVerificationToken = ?, role = 'ViewOnly'\n                  WHERE email = ?;\n                `\n                console.log(\n                  'Executing update query:',\n                  updateQuery,\n                  'with parameters:',\n                  parsedBody.emailVerificationToken,\n                  parsedBody.email,\n                )\n                const updateResult = await db\n                  .prepare(updateQuery)\n                  .bind(parsedBody.emailVerificationToken, parsedBody.email)\n                  .run()\n\n                console.log('Update result:', updateResult)\n                if (updateResult.changes === 0) {\n                  console.warn(\n                    `No rows were updated for email=${parsedBody.email}. This might indicate an issue.`,\n                  )\n                }\n\n                console.log(\n                  `Successfully updated emailVerificationToken for email=${parsedBody.email} in the database.`,\n                )\n              } else {\n                console.log(`Creating new user with email=${parsedBody.email}`)\n                const userId = uuidv4() // Generate a unique user ID\n                const insertQuery = `\n                  INSERT INTO config (user_id, email, emailVerificationToken, data, role)\n                  VALUES (?, ?, ?, ?, ?);\n                `\n                const insertResult = await db\n                  .prepare(insertQuery)\n                  .bind(\n                    userId,\n                    parsedBody.email,\n                    parsedBody.emailVerificationToken,\n                    JSON.stringify({}),\n                    'ViewOnly',\n                  )\n                  .run()\n\n                if (insertResult.changes === 0) {\n                  console.error(`Failed to create new user for email=${parsedBody.email}`)\n                  return addCorsHeaders(\n                    new Response(JSON.stringify({ error: 'Failed to create user in database.' }), {\n                      status: 500,\n                    }),\n                  )\n                }\n\n                console.log(`Successfully created new user for email=${parsedBody.email}`)\n              }\n\n              // Set a JWT token for the user using the emailVerificationToken\n              const jwtSecret = new TextEncoder().encode(env.JWT_SECRET) // Convert secret to Uint8Array\n              const jwtToken = await new SignJWT({\n                emailVerificationToken: parsedBody.emailVerificationToken,\n              })\n                .setProtectedHeader({ alg: 'HS256' })\n                .setExpirationTime('730d') // Set expiration time to 2 years\n                .sign(jwtSecret)\n\n              console.log('Generated JWT Token:', jwtToken)\n\n              // Redirect to login page with email and token in query parameters\n              return addCorsHeaders(\n                new Response(null, {\n                  status: 302,\n                  headers: {\n                    Location: `https://www.vegvisr.org/login?email=${encodeURIComponent(\n                      parsedBody.email,\n                    )}&token=${encodeURIComponent(jwtToken)}`,\n                  },\n                }),\n              )\n            } catch (dbError) {\n              console.error('Error updating emailVerificationToken in database:', dbError)\n              return addCorsHeaders(\n                new Response(\n                  JSON.stringify({\n                    error: 'Failed to update emailVerificationToken in database.',\n                    details: dbError.message,\n                  }),\n                  { status: 500 },\n                ),\n              )\n            }\n          }\n\n          return addCorsHeaders(\n            new Response(\n              JSON.stringify({\n                status: verifyResponse.status,\n                ok: verifyResponse.ok,\n                body: parsedBody,\n              }),\n              { status: 200 },\n            ),\n          )\n        } catch (error) {\n          console.error('Error fetching from external API:', error)\n          return addCorsHeaders(\n            new Response(\n              JSON.stringify({\n                error: 'Failed to contact verification API. Please try again later.',\n              }),\n              { status: 500 },\n            ),\n          )\n        }\n      }\n\n      if (path === '/check-email' && method === 'GET') {\n        console.log('Received GET /check-email request')\n\n        const userEmail = url.searchParams.get('email')\n        if (!userEmail) {\n          console.error('Error in GET /check-email: Missing email parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n\n        const db = env.vegvisr_org // Access the D1 database binding\n\n        try {\n          // Case 1: User is registered and verified\n          const queryVerified = `\n            SELECT user_id\n            FROM config\n            WHERE email = ? AND emailVerificationToken IS NOT NULL;\n          `\n          const verifiedUser = await db.prepare(queryVerified).bind(userEmail).first()\n\n          if (verifiedUser) {\n            console.log(`User with email ${userEmail} is registered and verified`)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({\n                  exists: true,\n                  verified: true,\n                  user_id: verifiedUser.user_id,\n                }),\n                { status: 200 },\n              ),\n            )\n          }\n\n          // Case 2: User is registered but not verified\n          const queryNotVerified = `\n            SELECT user_id\n            FROM config\n            WHERE email = ? AND emailVerificationToken IS NULL;\n          `\n          const notVerifiedUser = await db.prepare(queryNotVerified).bind(userEmail).first()\n\n          if (notVerifiedUser) {\n            console.log(`User with email ${userEmail} is registered but not verified`)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({\n                  exists: true,\n                  verified: false,\n                  user_id: notVerifiedUser.user_id,\n                }),\n                { status: 200 },\n              ),\n            )\n          }\n\n          // Case 3: User is not found\n          console.log(`User with email ${userEmail} does not exist in the database`)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ exists: false, verified: false }), { status: 200 }),\n          )\n        } catch (dbError) {\n          console.error('Error checking for existing user in database:', dbError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to check database for existing user.' }), {\n              status: 500,\n            }),\n          )\n        }\n      }\n\n      if (path === '/reset-registration' && method === 'POST') {\n        console.log('Received POST /reset-registration request')\n\n        const requestBody = await request.json()\n        const userEmail = requestBody.email\n\n        if (!userEmail) {\n          console.error('Error in POST /reset-registration: Missing email parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n\n        const db = env.vegvisr_org // Access the D1 database binding\n\n        try {\n          const deleteQuery = `\n            DELETE FROM config\n            WHERE email = ?;\n          `\n          const deleteResult = await db.prepare(deleteQuery).bind(userEmail).run()\n\n          console.log('Delete result:', deleteResult)\n\n          if (deleteResult.changes > 0) {\n            console.log(`User with email ${userEmail} deleted from the database`)\n            return addCorsHeaders(\n              new Response(JSON.stringify({ message: 'User registration reset successfully.' }), {\n                status: 200,\n              }),\n            )\n          } else {\n            console.log(`User with email ${userEmail} not found in the database`)\n            return addCorsHeaders(\n              new Response(JSON.stringify({ error: 'User not found in the database.' }), {\n                status: 404,\n              }),\n            )\n          }\n        } catch (dbError) {\n          console.error('Error deleting user from database:', dbError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to delete user from database.' }), {\n              status: 500,\n            }),\n          )\n        }\n      }\n\n      if (path === '/set-jwt' && method === 'GET') {\n        console.log('Received GET /set-jwt request')\n\n        const userEmail = url.searchParams.get('email')\n        if (!userEmail) {\n          console.error('Error in GET /set-jwt: Missing email parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n\n        const db = env.vegvisr_org // Access the D1 database binding\n\n        try {\n          // Retrieve the emailVerificationToken for the given email\n          const query = `\n        SELECT emailVerificationToken\n        FROM config\n        WHERE email = ?;\n          `\n          const userRecord = await db.prepare(query).bind(userEmail).first()\n\n          if (!userRecord || !userRecord.emailVerificationToken) {\n            console.error(`No valid emailVerificationToken found for email=${userEmail}`)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({ error: 'No valid emailVerificationToken found for this email.' }),\n                { status: 404 },\n              ),\n            )\n          }\n\n          // Generate a JWT token using the emailVerificationToken\n          const jwtSecret = new TextEncoder().encode(env.JWT_SECRET) // Convert secret to Uint8Array\n          const jwtToken = await new SignJWT({\n            emailVerificationToken: userRecord.emailVerificationToken,\n          })\n            .setProtectedHeader({ alg: 'HS256' })\n            .setExpirationTime('730d') // Set expiration time to 2 years\n            .sign(jwtSecret)\n\n          console.log('Generated JWT Token:', jwtToken)\n\n          // Return the JWT token to the client\n          return addCorsHeaders(\n            new Response(JSON.stringify({ jwt: jwtToken }), {\n              status: 200,\n              headers: { 'Content-Type': 'application/json' },\n            }),\n          )\n        } catch (dbError) {\n          console.error('Error retrieving emailVerificationToken from database:', dbError)\n          return addCorsHeaders(\n            new Response(\n              JSON.stringify({ error: 'Failed to retrieve emailVerificationToken from database.' }),\n              { status: 500 },\n            ),\n          )\n        }\n      }\n\n      if (path === '/github/issues' && method === 'GET') {\n        console.log('Received GET /github/issues request')\n\n        try {\n          const response = await fetch('https://www.slowyou.io/api/github/issues', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${env.GITHUB_TOKEN}`,\n            },\n          })\n\n          if (!response.ok) {\n            console.error(`Error fetching GitHub issues: ${response.status} ${response.statusText}`)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({\n                  error: `Failed to fetch GitHub issues. API returned status ${response.status}.`,\n                }),\n                { status: response.status },\n              ),\n            )\n          }\n\n          const issues = await response.json()\n          return addCorsHeaders(\n            new Response(JSON.stringify(issues), {\n              status: 200,\n              headers: { 'Content-Type': 'application/json' },\n            }),\n          )\n        } catch (error) {\n          console.error('Error fetching GitHub issues:', error)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to fetch GitHub issues.' }), {\n              status: 500,\n            }),\n          )\n        }\n      }\n\n      if (path === '/github/create-issue' && method === 'POST') {\n        console.log('Received POST /github/create-issue request')\n\n        try {\n          const requestBody = await request.json()\n          const { title, body, labels } = requestBody\n\n          if (!title || !body) {\n            return addCorsHeaders(\n              new Response(JSON.stringify({ error: 'Title and body are required fields.' }), {\n                status: 400,\n              }),\n            )\n          }\n\n          const response = await fetch('https://www.slowyou.io/api/github/create-issue', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${env.GITHUB_TOKEN}`,\n            },\n            body: JSON.stringify({\n              title,\n              body,\n              labels: labels || [],\n            }),\n          })\n\n          if (!response.ok) {\n            console.error(`Error creating GitHub issue: ${response.status} ${response.statusText}`)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({\n                  error: `Failed to create GitHub issue. API returned status ${response.status}.`,\n                }),\n                { status: response.status },\n              ),\n            )\n          }\n\n          const result = await response.json()\n          return addCorsHeaders(\n            new Response(JSON.stringify(result), {\n              status: 200,\n              headers: { 'Content-Type': 'application/json' },\n            }),\n          )\n        } catch (error) {\n          console.error('Error creating GitHub issue:', error)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to create GitHub issue.' }), {\n              status: 500,\n            }),\n          )\n        }\n      }\n\n      if (path === '/userdata' && method === 'GET') {\n        const url = new URL(request.url)\n        const userEmail = url.searchParams.get('email')\n        if (!userEmail) {\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n        const db = env.vegvisr_org\n        console.log('Fetching user data for email:', userEmail)\n        // First, let's check the table structure\n        const tableInfo = await db.prepare('PRAGMA table_info(config)').all()\n        console.log('Table structure:', tableInfo)\n\n        // Check if columns exist and add them if missing\n        const hasBioColumn = tableInfo.results.some((col) => col.name === 'bio')\n        const hasProfileImageColumn = tableInfo.results.some((col) => col.name === 'profileimage')\n        const hasEmailVerificationTokenColumn = tableInfo.results.some(\n          (col) => col.name === 'emailVerificationToken',\n        )\n        const hasRoleColumn = tableInfo.results.some((col) => col.name === 'role')\n\n        try {\n          if (!hasBioColumn) {\n            console.log('Adding bio column to config table')\n            await db.prepare('ALTER TABLE config ADD COLUMN bio TEXT').run()\n          }\n        } catch (e) {\n          console.log('Bio column may already exist:', e.message)\n        }\n\n        try {\n          if (!hasProfileImageColumn) {\n            console.log('Adding profileimage column to config table')\n            await db.prepare('ALTER TABLE config ADD COLUMN profileimage TEXT').run()\n          }\n        } catch (e) {\n          console.log('Profileimage column may already exist:', e.message)\n        }\n\n        try {\n          if (!hasEmailVerificationTokenColumn) {\n            console.log('Adding emailVerificationToken column to config table')\n            await db.prepare('ALTER TABLE config ADD COLUMN emailVerificationToken TEXT').run()\n          }\n        } catch (e) {\n          console.log('EmailVerificationToken column may already exist:', e.message)\n        }\n\n        try {\n          if (!hasRoleColumn) {\n            console.log('Adding role column to config table')\n            await db.prepare('ALTER TABLE config ADD COLUMN role TEXT DEFAULT \"ViewOnly\"').run()\n          }\n        } catch (e) {\n          console.log('Role column may already exist:', e.message)\n        }\n\n        const query = `SELECT user_id, data, profileimage, emailVerificationToken, bio FROM config WHERE email = ?;`\n        const row = await db.prepare(query).bind(userEmail).first()\n        console.log('Database row:', row)\n        if (!row) {\n          return addCorsHeaders(\n            new Response(\n              JSON.stringify({\n                email: userEmail,\n                user_id: null,\n                data: { profile: {}, settings: {} },\n                profileimage: '',\n                emailVerificationToken: null,\n                bio: '',\n              }),\n              { status: 200 },\n            ),\n          )\n        }\n        let parsedData = {}\n        try {\n          parsedData = JSON.parse(row.data)\n        } catch (e) {\n          console.error('Error parsing user data JSON:', e)\n        }\n        const mystmkraUserId = parsedData.profile && parsedData.profile.mystmkraUserId\n        console.log('Retrieved mystmkraUserId:', mystmkraUserId)\n        const response = {\n          email: userEmail,\n          user_id: row.user_id,\n          data: parsedData,\n          profileimage: row.profileimage,\n          emailVerificationToken: row.emailVerificationToken,\n          bio: row.bio || '',\n        }\n        console.log('Sending response:', response)\n        return addCorsHeaders(new Response(JSON.stringify(response), { status: 200 }))\n      }\n\n      if (path === '/userdata' && method === 'PUT') {\n        const db = env.vegvisr_org\n        const body = await request.json()\n        console.log('Received PUT /userdata request:', JSON.stringify(body, null, 2))\n        const { email, bio, data, profileimage } = body\n        console.log('Bio from request:', bio)\n        if (!email || !data || profileimage === undefined) {\n          return addCorsHeaders(\n            new Response(\n              JSON.stringify({ error: 'Missing required fields: email, data, or profileimage' }),\n              { status: 400 },\n            ),\n          )\n        }\n        if (\n          typeof data !== 'object' ||\n          !data.profile ||\n          !data.settings ||\n          typeof data.profile !== 'object' ||\n          typeof data.settings !== 'object'\n        ) {\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Invalid data structure' }), { status: 400 }),\n          )\n        }\n        // Ensure mystmkraUserId is present in data.profile\n        if (body.mystmkraUserId) {\n          data.profile.mystmkraUserId = body.mystmkraUserId\n        }\n        // If mystmkraUserId is already in data.profile, keep it (for robustness)\n        if (data.profile && data.profile.mystmkraUserId) {\n          // No action needed, value is already present\n        }\n        console.log('Saving mystmkraUserId:', data.profile.mystmkraUserId)\n        const dataJson = JSON.stringify(data)\n\n        // First, let's check if the columns exist\n        const tableInfo = await db.prepare('PRAGMA table_info(config)').all()\n        console.log('Table structure:', tableInfo)\n\n        // Check if columns exist and add them if missing\n        const hasBioColumn = tableInfo.results.some((col) => col.name === 'bio')\n        const hasProfileImageColumn = tableInfo.results.some((col) => col.name === 'profileimage')\n\n        try {\n          if (!hasBioColumn) {\n            console.log('Adding bio column to config table')\n            await db.prepare('ALTER TABLE config ADD COLUMN bio TEXT').run()\n          }\n        } catch (e) {\n          console.log('Bio column may already exist:', e.message)\n        }\n\n        try {\n          if (!hasProfileImageColumn) {\n            console.log('Adding profileimage column to config table')\n            await db.prepare('ALTER TABLE config ADD COLUMN profileimage TEXT').run()\n          }\n        } catch (e) {\n          console.log('Profileimage column may already exist:', e.message)\n        }\n\n        const query = `\n          INSERT INTO config (user_id, email, bio, data, profileimage)\n          VALUES (?, ?, ?, ?, ?)\n          ON CONFLICT(user_id) DO UPDATE SET bio = ?, data = ?, profileimage = ?;\n        `\n        console.log('Executing query with bio:', bio)\n        // Generate a user_id if we don't have one\n        const userId = data.profile?.user_id || uuidv4()\n\n        const result = await db\n          .prepare(query)\n          .bind(userId, email, bio, dataJson, profileimage, bio, dataJson, profileimage)\n          .run()\n        console.log('Query result:', result)\n        return addCorsHeaders(\n          new Response(\n            JSON.stringify({ success: true, message: 'User data updated successfully' }),\n            { status: 200 },\n          ),\n        )\n      }\n\n      // Handle other routes\n      return new Response('Not Found', { status: 404 })\n    } catch (error) {\n      console.error('Error in fetch handler:', error)\n      return new Response(JSON.stringify({ error: error.message }), { status: 500 })\n    }\n  },\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\.wrangler\\\\tmp\\\\bundle-0TX7fQ\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\.wrangler\\\\tmp\\\\bundle-0TX7fQ\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\.wrangler\\\\tmp\\\\bundle-0TX7fQ\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["message", "url"]
}
