{
  "version": 3,
  "sources": ["../../../../node_modules/uuid/dist/esm-browser/stringify.js", "../../../../node_modules/uuid/dist/esm-browser/rng.js", "../../../../node_modules/uuid/dist/esm-browser/native.js", "../../../../node_modules/uuid/dist/esm-browser/v4.js", "../../../index.js", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-LDA5OO/middleware-insertion-facade.js", "../../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-LDA5OO/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\torar\\MyApps\\vegvisr-frontend\\main-worker\\.wrangler\\tmp\\dev-lyHz6J",
  "sourcesContent": ["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "import { v4 as uuidv4 } from 'uuid' // Import UUID library\n\n// Middleware to add CORS headers\nfunction addCorsHeaders(response) {\n  response.headers.set('Access-Control-Allow-Origin', '*')\n  response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS')\n  response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization')\n  return response\n}\n\n// Function to generate a unique file name\nfunction generateUniqueFileName(user_id, fileExtension) {\n  const uniqueId = uuidv4()\n  return `${user_id}/profileimage_${uniqueId}.${fileExtension}`\n}\n\n// Cloudflare Worker fetch handler\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url)\n    const path = url.pathname\n    const method = request.method\n\n    // Handle CORS preflight requests\n    if (method === 'OPTIONS') {\n      return addCorsHeaders(new Response(null, { status: 204 }))\n    }\n\n    try {\n      if (path === '/sve2' && method === 'GET') {\n        console.log('Received GET /sve2 request')\n\n        const userEmail = url.searchParams.get('email')\n        const apiToken = env.API_TOKEN // Retrieve the token from the environment variable\n\n        if (!apiToken) {\n          console.error('Error in GET /sve2: Missing API token')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing API token' }), { status: 500 }),\n          )\n        }\n\n        if (!userEmail) {\n          console.error('Error in GET /sve2: Missing email parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n\n        const db = env.vegvisr_org // Access the D1 database binding\n\n        // Check if the user already exists in the database by checking if the email is already present\n        try {\n          const query = `\n            SELECT user_id\n            FROM config\n            WHERE email = ?;\n          `\n          const existingUser = await db.prepare(query).bind(userEmail).first()\n          if (existingUser) {\n            console.log(`User with email ${userEmail} already exists in the database`)\n            return addCorsHeaders(\n              new Response(JSON.stringify({ message: 'User with this email already exists.' }), {\n                status: 200,\n              }),\n            )\n          }\n        } catch (dbError) {\n          console.error('Error checking for existing user in database:', dbError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to check database for existing user.' }), {\n              status: 500,\n            }),\n          )\n        }\n\n        // Call the external API to register the user\n        const apiUrl = `https://slowyou.io/api/reg-user-vegvisr?email=${encodeURIComponent(userEmail)}`\n        console.log('API URL:', apiUrl)\n        console.log('Authorization Header:', `Bearer ${apiToken}`)\n\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${apiToken}`,\n          },\n        })\n\n        console.log('Response status:', response.status)\n        const rawBody = await response.text()\n        console.log('Raw response body:', rawBody)\n\n        if (!response.ok) {\n          console.error(`Error from external API: ${response.status} ${response.statusText}`)\n          return addCorsHeaders(\n            new Response(\n              JSON.stringify({\n                error: `Failed to register user. External API returned status ${response.status}.`,\n              }),\n              { status: 500 },\n            ),\n          )\n        }\n\n        let responseBody\n        try {\n          responseBody = JSON.parse(rawBody)\n        } catch (parseError) {\n          console.error('Error parsing response body:', parseError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to parse response from external API.' }), {\n              status: 500,\n            }),\n          )\n        }\n\n        // Insert the new user into the database\n        try {\n          const userId = uuidv4() // Generate a unique user ID\n          const defaultData =\n            '{\"profile\":{\"username\":\"\",\"email\":\"\",\"bio\":\"\"},\"settings\":{\"darkMode\":false,\"notifications\":true,\"theme\":\"dark\"}}'\n          const insertQuery = `\n            INSERT INTO config (email, user_id, data)\n            VALUES (?, ?, ?)\n            ON CONFLICT(email) DO NOTHING;\n          `\n          console.log(\n            'Executing query:',\n            insertQuery,\n            'with parameters:',\n            userEmail,\n            userId,\n            defaultData,\n          )\n          await db.prepare(insertQuery).bind(userEmail, userId, defaultData).run()\n          console.log(\n            `Inserted record into database: email=${userEmail}, user_id=${userId}, data=${defaultData}`,\n          )\n        } catch (dbError) {\n          console.error('Error inserting record into database:', dbError)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to insert record into database.' }), {\n              status: 500,\n            }),\n          )\n        }\n\n        return addCorsHeaders(\n          new Response(JSON.stringify({ status: response.status, body: responseBody }), {\n            status: 200,\n          }),\n        )\n      }\n\n      if (path === '/resend-verification' && method === 'POST') {\n        console.log('Received POST /resend-verification request')\n\n        const requestBody = await request.json()\n        const userEmail = requestBody.email\n        const apiToken = env.API_TOKEN // Retrieve the token from the environment variable\n\n        if (!apiToken) {\n          console.error('Error in POST /resend-verification: Missing API token')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing API token' }), { status: 500 }),\n          )\n        }\n\n        if (!userEmail) {\n          console.error('Error in POST /resend-verification: Missing email parameter')\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Missing email parameter' }), { status: 400 }),\n          )\n        }\n\n        // Call the external API to resend the verification email\n        const apiUrl = `https://slowyou.io/api/resend-verification-email?email=${encodeURIComponent(\n          userEmail,\n        )}`\n        console.log('API URL:', apiUrl)\n        console.log('Authorization Header:', `Bearer ${apiToken}`)\n\n        try {\n          const response = await fetch(apiUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${apiToken}`,\n            },\n          })\n\n          console.log('Response status:', response.status)\n          const rawBody = await response.text()\n          console.log('Raw response body:', rawBody)\n\n          if (!response.ok) {\n            console.error(`Error from external API: ${response.status} ${response.statusText}`)\n            return addCorsHeaders(\n              new Response(\n                JSON.stringify({\n                  error: `Failed to resend verification email. External API returned status ${response.status}.`,\n                }),\n                { status: 500 },\n              ),\n            )\n          }\n\n          return addCorsHeaders(\n            new Response(JSON.stringify({ message: 'Verification email resent successfully.' }), {\n              status: 200,\n            }),\n          )\n        } catch (error) {\n          console.error('Error calling external API:', error)\n          return addCorsHeaders(\n            new Response(JSON.stringify({ error: 'Failed to resend verification email.' }), {\n              status: 500,\n            }),\n          )\n        }\n      }\n\n      // Handle other routes\n      return new Response('Not Found', { status: 404 })\n    } catch (error) {\n      console.error('Error in fetch handler:', error)\n      return new Response(JSON.stringify({ error: error.message }), { status: 500 })\n    }\n  },\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\.wrangler\\\\tmp\\\\bundle-LDA5OO\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\.wrangler\\\\tmp\\\\bundle-LDA5OO\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\torar\\\\MyApps\\\\vegvisr-frontend\\\\main-worker\\\\.wrangler\\\\tmp\\\\bundle-LDA5OO\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
